=begin
#MX Platform API

#The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

The version of the OpenAPI document: 0.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'spec_helper'
require 'json'

# Unit tests for MxPlatformRuby::GoalsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GoalsApi' do
  before do
    # run before each test
    @api_instance = MxPlatformRuby::GoalsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GoalsApi' do
    it 'should create an instance of GoalsApi' do
      expect(@api_instance).to be_instance_of(MxPlatformRuby::GoalsApi)
    end
  end

  # unit tests for users_user_guid_goals_get
  # List goals
  # List all goals a user can set.
  # @param user_guid The unique identifier for the user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page Results are returned in paginated sets, this is the page of the results you would like to view. Defaults to page 1 if no page is specified.
  # @option opts [String] :records_per_age The supported range is from 10 to 1000. If the records_per_page parameter is not specified or is outside this range, a default of 25 records per page will be used.
  # @return [GoalsResponseBody]
  describe 'users_user_guid_goals_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_user_guid_goals_goal_guid_delete
  # Delete a goal
  # Delete a goal.
  # @param goal_guid The unique identifier for a goal. Defined by MX.
  # @param user_guid The unique identifier for a user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'users_user_guid_goals_goal_guid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_user_guid_goals_goal_guid_get
  # Read a goal
  # Read a specific goal.
  # @param goal_guid The unique identifier for a goal. Defined by MX.
  # @param user_guid The unique identifier for a user.
  # @param [Hash] opts the optional parameters
  # @return [GoalResponseBody]
  describe 'users_user_guid_goals_goal_guid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_user_guid_goals_goal_guid_put
  # Update a goal
  # This endpoint updates a specific goal.
  # @param goal_guid The unique identifier for a goal. Defined by MX.
  # @param user_guid The unique identifier for a user.
  # @param update_goal_request_body 
  # @param [Hash] opts the optional parameters
  # @return [GoalResponseBody]
  describe 'users_user_guid_goals_goal_guid_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_user_guid_goals_post
  # Create a goal
  # Create a goal. This endpoint accepts the optional &#x60;MX-Skip-Webhook&#x60; header and &#x60;skip_webhook&#x60; parameter.
  # @param user_guid The unique identifier for the user.
  # @param goal_request_body 
  # @param [Hash] opts the optional parameters
  # @return [GoalResponseBody]
  describe 'users_user_guid_goals_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for users_user_guid_goals_reposition_put
  # Reposition goals
  # This endpoint repositions goal priority levels. If one goal is set to a lower priority, then any other goals need to be adjusted accordingly.
  # @param user_guid The unique identifier for the user.
  # @param reposition_request_body 
  # @param [Hash] opts the optional parameters
  # @return [RepositionResponseBody]
  describe 'users_user_guid_goals_reposition_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
